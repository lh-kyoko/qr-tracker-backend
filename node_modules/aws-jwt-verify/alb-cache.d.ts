import { JwkWithKid, Jwks, JwksCache } from "./jwk.js";
import { Fetcher } from "./https.js";
import { JwtHeader, JwtPayload } from "./jwt-model.js";
interface DecomposedJwt {
    header: JwtHeader;
    payload: JwtPayload;
}
export declare class AlbJwksCache implements JwksCache {
    fetcher: Fetcher;
    private jwkCache;
    private fetchingJwks;
    constructor(props?: {
        fetcher?: Fetcher;
    });
    private expandWithKid;
    private getKid;
    private isValidAlbKid;
    getJwk(jwksUri: string, decomposedJwt: DecomposedJwt): Promise<JwkWithKid>;
    private pemToJwk;
    getCachedJwk(jwksUri: string, decomposedJwt: DecomposedJwt): JwkWithKid;
    addJwks(jwksUri: string, jwks: Jwks): void;
    getJwks(): Promise<Jwks>;
}
export {};
